import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import React, { useCallback, useState } from "react";
import { useDropzone } from "react-dropzone";

const snarkjs = require("snarkjs");

enum Stage {
  PREV_ZKEY,
  ENTROPY,
  CONTRIBUTING,
  FINISHED, // download ready
}

// TODO: change back to 50 after testing
const DESIRED_ENTROPY_LEN = 50;

export default function Home() {
  const [stage, setStage] = useState<Stage>(Stage.PREV_ZKEY);

  const [prevZkeyBytes, setPrevZkeyBytes] = useState<Uint8Array | null>(null);
  const [entropy, setEntropy] = useState<string[]>([]);

  // NOTE: reads zkey into mem
  const onDrop = useCallback((files: File[]) => {
    const reader = new FileReader();
    reader.onabort = () => console.log("file reading was aborted");
    reader.onerror = () => console.log("file reading has failed");
    reader.onload = () => {
      // Do whatever you want with the file contents
      const binaryStr = reader.result as ArrayBuffer;
      console.log("file byte length", binaryStr.byteLength);
      setPrevZkeyBytes(new Uint8Array(binaryStr));
      setStage(Stage.ENTROPY);
    };
    reader.readAsArrayBuffer(files[0]);
  }, []);
  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });

  const handleEntropyKeyDown = async (
    event: React.KeyboardEvent<HTMLInputElement>
  ) => {
    const newEntropy = [...entropy, event.key];
    setEntropy(newEntropy);

    if (entropy.length >= DESIRED_ENTROPY_LEN) {
      console.log(`collected ${DESIRED_ENTROPY_LEN} keypressses of entropy`);
      setStage(Stage.CONTRIBUTING);
      await runContribution();
    }
  };

  const runContribution = async () => {
    const startTime = Date.now();

    console.log("running zkey contribution w/ entropy: ", entropy);
    const memZkey = {
      type: "mem",
      data: new Uint8Array(0),
    };
    const ret = await snarkjs.zKey.contribute(
      prevZkeyBytes,
      memZkey,
      "dummy name", // TODO: name by contributor?
      entropy.join(""),
      console
    );

    console.log("finished contribution in ", Date.now() - startTime, "ms");
    console.log("zkey bytes: ", memZkey);

    setStage(Stage.FINISHED);
    await downloadZkeyData(memZkey.data as Uint8Array);
  };

  const downloadZkeyData = async (data: Uint8Array) => {
    var blob = new Blob([data.buffer]);
    var url = URL.createObjectURL(blob);

    // NOTE: jank hack for downloading...
    const link = document.createElement("a");
    link.href = url;
    link.setAttribute("download", "contribution.zkey");

    // Append to html link element page
    document.body.appendChild(link);

    // Start download
    link.click();

    // Clean up and remove the link
    if (link.parentNode) {
      link.parentNode.removeChild(link);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Personae Labs setup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Personae Labs trusted setup</h1>

        <div className={styles.description}>
          {stage === Stage.PREV_ZKEY && (
            <div {...getRootProps()}>
              <input {...getInputProps()} />
              {isDragActive ? (
                <p>Drop files here</p>
              ) : (
                <p>Click me to add the prev zkey file</p>
              )}
            </div>
          )}

          {stage === Stage.ENTROPY && (
            <div onKeyDown={handleEntropyKeyDown} tabIndex={0}>
              <div>
                <p>Click me, then type random characters for entropy.</p>
                <p>
                  You may need to disable extensions like Vimium that take
                  keyboard input.
                </p>
                <p>Fight muscle memory! The more random the better</p>
              </div>
            </div>
          )}

          {stage === Stage.CONTRIBUTING && (
            <div>
              <p>Entropy collected! Computing phase2 contribution...</p>
            </div>
          )}

          {stage == Stage.FINISHED && (
            <div>
              <p>
                All done! New Zkey downloaded. Please pass it to the next
                participant.
              </p>
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
