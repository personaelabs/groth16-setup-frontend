import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import React, { useCallback, useState } from "react";
import { useDropzone } from "react-dropzone";

const snarkjs = require("snarkjs");
// console.log(snarkjs.zKey.contribute);

// step 1: prev zkey
// step 2: send entropy
// step 3: run contribution, send back new zkey

enum Stage {
  PREV_ZKEY,
  ENTROPY,
  CONTRIBUTING,
  FINISHED,
}

const DESIRED_ENTROPY_LEN = 50;

export default function Home() {
  // TODO: start at PREV_ZKEY
  const [stage, setStage] = useState<Stage>(Stage.ENTROPY);

  const [prevZkey, setPrevZkey] = useState<File | null>(null);
  const [entropy, setEntropy] = useState<string[]>([]);

  const onDrop = useCallback((acceptedFiles: File[]) => {
    setPrevZkey(acceptedFiles[0]);
    console.log("Accepted prev zkey: ", acceptedFiles[0]);
    setStage(Stage.ENTROPY);
  }, []);
  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });

  const handleEntropyKeyDown = (
    event: React.KeyboardEvent<HTMLInputElement>
  ) => {
    const newEntropy = [...entropy, event.key];
    setEntropy(newEntropy);

    if (entropy.length >= DESIRED_ENTROPY_LEN) {
      console.log(`all set! ${DESIRED_ENTROPY_LEN} keys collected1`);
      setStage(Stage.CONTRIBUTING);
      // TODO: start contribution
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Personae Labs setup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Personae Lab trusted setup</h1>

        {/* based on stage, get zkey or get entropy or run contribution or download */}
        <div className={styles.description}>
          {stage === Stage.PREV_ZKEY && (
            <div {...getRootProps()}>
              <input {...getInputProps()} />
              {isDragActive ? (
                <p>Drop files here</p>
              ) : (
                <p>Click me to add the prev zkey file</p>
              )}
            </div>
          )}

          {/* TODO: on keyboard presses, record all until have received 'N', i.e. 100 length string */}
          {stage === Stage.ENTROPY && (
            <div onKeyDown={handleEntropyKeyDown} tabIndex={0}>
              <div>
                <p>Click me, then type random characters for entropy.</p>
                <p>Fight muscle memory! The more random the better</p>
              </div>
            </div>
          )}

          {/* This phase is basically just running snarkjs stuff in the bg */}
          {stage === Stage.CONTRIBUTING && (
            <div>
              <p>Entropy collected! Computing phase2 contribution.</p>
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
